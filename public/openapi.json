{
    "openapi": "3.0.0",
    "info": {
        "title": "Vault Indexer API",
        "version": "1.0",
        "description": "API documentation for the Vault Indexer service"
    },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key",
                "description": "API key for authentication"
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "paths": {
        "/v1/vault/{vaultAddress}/positions": {
            "get": {
                "summary": "Get vault positions",
                "description": "Retrieves positions for a given vault address with optional filtering and pagination",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vaultAddress",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Ethereum address of the vault"
                    },
                    {
                        "in": "query",
                        "name": "owner_address",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Optional filter by owner ethereum address"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Starting position index for pagination (position_index_id)"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "description": "Sort order for position_index_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of positions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Position index ID"
                                                    },
                                                    "amount_shares": {
                                                        "type": "string",
                                                        "description": "Amount of shares in the position"
                                                    },
                                                    "position_start_height": {
                                                        "type": "integer",
                                                        "description": "Block height when position was created"
                                                    },
                                                    "position_end_height": {
                                                        "type": "integer",
                                                        "description": "Block height when position was closed (if applicable)"
                                                    },
                                                    "owner_address": {
                                                        "type": "string",
                                                        "description": "Ethereum address of the position owner"
                                                    },
                                                    "withdraw_receiver_address": {
                                                        "type": "string",
                                                        "description": "Ethereum address that will receive withdrawn funds"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "Timestamp when the position was created"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message describing what went wrong"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/vault/{vaultAddress}/withdrawRequestByAddress/{ownerAddress}": {
            "get": {
                "summary": "Get vault withdraw request by ethereum address",
                "description": "Retrieves withdraw requests for a given ethereum address in a specific vault",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vaultAddress",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Ethereum address of the vault"
                    },
                    {
                        "in": "path",
                        "name": "ownerAddress",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Owner address to get withdraw requests for"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Starting withdraw request ID for pagination"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "description": "Sort order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of withdraw requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Withdraw request ID"
                                                    },
                                                    "amount": {
                                                        "type": "string",
                                                        "description": "Amount to withdraw"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "description": "Timestamp of request creation"
                                                    },
                                                    "owner_address": {
                                                        "type": "string",
                                                        "description": "Ethereum address of the request owner"
                                                    },
                                                    "receiver_address": {
                                                        "type": "string",
                                                        "description": "Ethereum address of the receiver"
                                                    },
                                                    "block_number": {
                                                        "type": "integer",
                                                        "description": "Block number when the request was created"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message describing what went wrong"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/vault/{vaultAddress}/withdrawRequests": {
            "get": {
                "summary": "Get all withdraw requests for a vault",
                "description": "Retrieves withdraw requests for a given vault address with pagination",
                "parameters": [
                    {
                        "in": "path",
                        "name": "vaultAddress",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Ethereum address of the vault"
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Withdraw request ID to use as a cutoff point for pagination (inclusive)"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "Maximum number of records to return"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        },
                        "description": "Sort order for the results"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of withdraw requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Unique identifier of the withdraw request"
                                                    },
                                                    "amount": {
                                                        "type": "string",
                                                        "description": "Amount to be withdrawn"
                                                    },
                                                    "block_number": {
                                                        "type": "integer",
                                                        "description": "Block number when the request was created"
                                                    },
                                                    "owner_address": {
                                                        "type": "string",
                                                        "description": "Address of the request owner"
                                                    },
                                                    "receiver_address": {
                                                        "type": "string",
                                                        "description": "Address that will receive the withdrawn funds"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "description": "Timestamp when the request was created"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or vault address"
                    }
                }
            }
        }
    },
    "tags": []
}